/*
 * ADP APIs
 * ADP API endpoints.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for HrApi
 */
@Disabled
public class HrApiTest {

    private static HrApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new HrApi(apiClient);
    }

    /**
     * Worker V2 (Check Async Request Status)
     *
     * Check the status of an async request to the Worker API given the key returned as part of the original asyn response&#39;s \&quot;link\&quot; header.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void checkAsyncRequestStatusTest() throws ApiException {
        String key = null;
        String $select = null;
        api.checkAsyncRequestStatus(key)
                .$select($select)
                .execute();
        // TODO: test validations
    }

    /**
     * Worker V2 (Single by AOID)
     *
     * Request a single worker given their AOID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWorkerByAoidTest() throws ApiException {
        String anthonyAlbrightAoid = null;
        String preventCache = null;
        api.getWorkerByAoid(anthonyAlbrightAoid)
                .preventCache(preventCache)
                .execute();
        // TODO: test validations
    }

    /**
     * Worker Demographics V2 (Single by AOID)
     *
     * Request demographic data for a single worker given their AOID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWorkerDemographicsByAoidTest() throws ApiException {
        String anthonyAlbrightAoid = null;
        String preventCache = null;
        api.getWorkerDemographicsByAoid(anthonyAlbrightAoid)
                .preventCache(preventCache)
                .execute();
        // TODO: test validations
    }

    /**
     * Worker V2 (List with Top 5 and Prevent Cache)
     *
     * Request a collection of the top 5 workers using a URI cache-buster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTop5PreventCacheTest() throws ApiException {
        String $top = null;
        String preventCache = null;
        String $filter = null;
        api.listTop5PreventCache()
                .$top($top)
                .preventCache(preventCache)
                .$filter($filter)
                .execute();
        // TODO: test validations
    }

    /**
     * Worker Demographics V2 (List with Top 5 and Prevent Cache)
     *
     * Request demographic data for a collection of the top 5 workers using a URI cache-buster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTop5PreventCache_0Test() throws ApiException {
        String $top = null;
        String preventCache = null;
        String $filter = null;
        api.listTop5PreventCache_0()
                .$top($top)
                .preventCache(preventCache)
                .$filter($filter)
                .execute();
        // TODO: test validations
    }

}
